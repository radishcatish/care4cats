[gd_resource type="VisualShader" load_steps=8 format=3 uid="uid://cg7yp744ejt7q"]

[sub_resource type="VisualShaderNodeColorFunc" id="VisualShaderNodeColorFunc_a50r5"]
function = 1

[sub_resource type="VisualShaderNodeVec3Constant" id="VisualShaderNodeVec3Constant_sgsc8"]
expanded_output_ports = [0]
constant = Vector3(1, 1, 0.5)

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_s3ijf"]
expanded_output_ports = [0]
operator = 2

[sub_resource type="VisualShaderNodeColorFunc" id="VisualShaderNodeColorFunc_incrn"]
function = 2

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_a50r5"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_sgsc8"]
input_name = "normal"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_0v6g7"]
operator = 2

[resource]
code = "shader_type spatial;
render_mode blend_add, depth_draw_opaque, cull_back, diffuse_toon, specular_toon, unshaded, shadows_disabled, vertex_lighting, fog_disabled;




void fragment() {
// Input:7
	vec3 n_out7p0 = NORMAL;


// VectorOp:8
	vec3 n_out8p0 = n_out7p0 * n_out7p0;


	vec3 n_out11p0;
// ColorFunc:11
	{
		vec3 c = n_out8p0;
		vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);
		vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);
		n_out11p0 = c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);
	}


// Vector3Constant:12
	vec3 n_out12p0 = vec3(1.000000, 1.000000, 0.500000);
	float n_out12p3 = n_out12p0.b;


// VectorOp:13
	vec3 n_out13p0 = n_out11p0 * n_out12p0;
	float n_out13p1 = n_out13p0.r;
	float n_out13p2 = n_out13p0.g;


// VectorCompose:17
	vec3 n_out17p0 = vec3(n_out13p1, n_out13p2, n_out12p3);


	vec3 n_out14p0;
// ColorFunc:14
	{
		vec3 c = n_out17p0;
		vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);
		vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));
		vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));
		float d = q.x - min(q.w, q.y);
		float e = 1.0e-10;
		n_out14p0 = vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);
	}


// Output:0
	ALBEDO = n_out14p0;


}
"
modes/blend = 1
modes/diffuse = 3
modes/specular = 1
flags/unshaded = true
flags/shadows_disabled = true
flags/vertex_lighting = true
flags/fog_disabled = true
nodes/fragment/0/position = Vector2(980, -60)
nodes/fragment/7/node = SubResource("VisualShaderNodeInput_sgsc8")
nodes/fragment/7/position = Vector2(-580, 140)
nodes/fragment/8/node = SubResource("VisualShaderNodeVectorOp_0v6g7")
nodes/fragment/8/position = Vector2(-220, -60)
nodes/fragment/11/node = SubResource("VisualShaderNodeColorFunc_a50r5")
nodes/fragment/11/position = Vector2(0, 20)
nodes/fragment/12/node = SubResource("VisualShaderNodeVec3Constant_sgsc8")
nodes/fragment/12/position = Vector2(-140, 200)
nodes/fragment/13/node = SubResource("VisualShaderNodeVectorOp_s3ijf")
nodes/fragment/13/position = Vector2(240, -40)
nodes/fragment/14/node = SubResource("VisualShaderNodeColorFunc_incrn")
nodes/fragment/14/position = Vector2(740, 20)
nodes/fragment/17/node = SubResource("VisualShaderNodeVectorCompose_a50r5")
nodes/fragment/17/position = Vector2(520, 20)
nodes/fragment/connections = PackedInt32Array(7, 0, 8, 1, 8, 0, 11, 0, 11, 0, 13, 0, 12, 0, 13, 1, 14, 0, 0, 0, 13, 1, 17, 0, 13, 2, 17, 1, 12, 3, 17, 2, 17, 0, 14, 0, 7, 0, 8, 0)
